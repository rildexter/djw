using System.Collections; // Importa o namespace System.Collections para usar classes de coleções
using System.Collections.Generic; // Importa o namespace System.Collections.Generic para usar coleções genéricas
using TMPro; // Importa o namespace TMPro para acessar funcionalidades de texto do TextMeshPro
using UnityEngine; // Importa o namespace UnityEngine para acessar funcionalidades do Unity
using UnityEngine.SceneManagement; // Importa o namespace UnityEngine.SceneManagement para acessar funcionalidades de cena do Unity
using UnityEngine.UI; // Importa o namespace UnityEngine.UI para acessar funcionalidades de UI do Unity

public class GameController : MonoBehaviour // Declara a classe GameController e herda de MonoBehaviour, indicando que é um componente do Unity
{
    public TextMeshProUGUI scoreText; // Declara uma variável pública do tipo TextMeshProUGUI chamada scoreText, que armazena uma referência ao texto de score
    public GameObject gameOver; // Declara uma variável pública do tipo GameObject chamada gameOver, que armazena uma referência ao objeto de tela de game over
    private int score = 0; // Declara uma variável privada do tipo int chamada score, que armazena o valor do score
    public static GameController instance; // Declara uma variável estática chamada instance, que permite acessar esta classe de qualquer lugar do código

    private void Awake() // Método chamado quando o objeto é inicializado
    {
        instance = this; // Define a instância atual desta classe como a instância estática, garantindo que haja apenas uma instância da classe GameController
        Time.timeScale = 1; // Define o timeScale para 1 para garantir que o jogo não esteja pausado inicialmente
    }

    public void ShowGameOver() // Método público que mostra a tela de game over
    {
        gameOver.SetActive(true); // Ativa o objeto de tela de game over para mostrá-lo ao jogador
        Time.timeScale = 0; // Define o timeScale para 0 para pausar o jogo após o game over
    }

    public void RestartGame() // Método público que reinicia o jogo
    {
        Scene scene = SceneManager.GetActiveScene(); // Obtém a cena ativa
        SceneManager.LoadScene(scene.name); // Recarrega a cena pelo nome, reiniciando o jogo
    }

    public void AddScore() // Método público que adiciona pontuação ao score
    {
        score++; // Incrementa o valor do score
        scoreText.text = score.ToString(); // Atualiza o texto do score na UI com o valor atualizado do score convertido para string
    }
}


---------

using System.Collections; // Importa o namespace System.Collections para usar classes de coleções
using System.Collections.Generic; // Importa o namespace System.Collections.Generic para usar coleções genéricas
using UnityEngine; // Importa o namespace UnityEngine para acessar funcionalidades do Unity

public class Colectable : MonoBehaviour // Declara a classe Colectable e herda de MonoBehaviour, indicando que é um componente do Unity
{
    public Rigidbody2D rig; // Declara uma variável pública do tipo Rigidbody2D chamada rig
    public float speed; // Declara uma variável pública do tipo float chamada speed

    private void FixedUpdate() // Método chamado em intervalos fixos, ideal para manipulações de física
    {
        // Move a posição do objeto rig para baixo (eixo Y) com uma velocidade constante, baseada na variável speed e no tempo decorrido desde o último quadro
        rig.MovePosition(transform.position + Vector3.down * speed * Time.deltaTime);
    }

    private void OnTriggerEnter2D(Collider2D collision) // Método chamado quando um objeto colide com o trigger do coletável
    {
        // Verifica se o objeto que colidiu tem a tag "Player"
        if (collision.CompareTag("Player"))
        {
            // Chama o método AddScore do GameController para adicionar pontuação ao jogador
            GameController.instance.AddScore();
        }
    }
}
